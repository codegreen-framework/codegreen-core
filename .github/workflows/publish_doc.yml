name: Publish Docs to GitHub Pages

on:
  push:
    branches:
      - release  # Only trigger on the release branch

permissions:
  contents: read
  pages: write  # Required for GitHub Pages API
  id-token: write  # Required for authentication

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.5'

      # Step to dynamically generate the .config file with the secret
      - name: Generate .config file
        run: |
          echo "[codegreen]" > docs/.codegreencore.config
          echo "ENTSOE_token=${{ secrets.ENTSOE_TOKEN }}" >> docs/.codegreencore.config
          echo "enable_energy_caching=false" >> docs/.codegreencore.config
      - name: Generate .config file
        run: |
          echo "[codegreen]" > .codegreencore.config
          echo "ENTSOE_token=${{ secrets.ENTSOE_TOKEN }}" >> .codegreencore.config
          echo "enable_energy_caching=false" >> .codegreencore.config
      - name: Verify .config file
        run: |
          cat .codegreencore.config
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install  .
          pip install sphinx==7.4.7  # Install Sphinx and theme if needed

      - name: Build Sphinx Docs
        run: |
          make html  
      - name: List files in build directory
        run: ls -R ./build/html
      - name: Upload static files as artifact
        id: deployment
        uses: actions/upload-pages-artifact@v3 # or specific "vX.X.X" version tag for this action
        with:
          path: build/html/
      # - name: Upload artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: github-pages
      #     path: ./build/html  # Ensure this is the correct path
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
  # deploy:
  #   needs: build
  #   # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
  #   permissions:
  #     pages: write      # to deploy to Pages
  #     id-token: write   # to verify the deployment originates from an appropriate source

  #   # Deploy to the github-pages environment
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}

  #   # Specify runner + deployment step
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v4 